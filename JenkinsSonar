def artifactname = "devops-snow-build-app.jar"
def repoName = "Demo"
def pipelineName = "ScriptedPipelines/Scripted-Pipeline"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "devops-snow-build-pkg_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "devops-snow-build-pkg"

pipeline { 
  agent any  
  tools {  
       maven 'Maven'   
   } 
   environment { 
	 SCANNER_HOME = tool 'sonarScanner'
	}   
  stages {  
       stage('Build') { 
           steps {
              echo 'Build Stage'
              sh 'mvn -B -DskipTests clean compile'
	       snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
	       snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")

           }
       } 
       stage('Test') { 
           steps {
              
              sh 'mvn test'
	    //  snDevOpsSecurityResult securityResultAttributes: "{'scanner': 'Veracode','applicationName': 'PetStoreAPI-Github', 'securityToolId' : ''}"
	      //sh '/usr/local/Cellar/openjdk@17/17.0.9/libexec/openjdk.jdk/Contents/Home/bin/java -jar /var/jenkins_home/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonarScanner/bin/sonar-scanner'
	      //sonarSummaries()
           }
	 // post {
         //   always {
          //     junit "**/target/surefire-reports/TEST-DevOpsDemo.Calculator.CalculatorTest.xml"
         //   }
        //   } 
         
       }
      stage('Deploy') { 
                 steps {
                    
                    echo 'Deploying the change....'
		   
                   // snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
           	   // snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
		    snDevOpsChange(ignoreErrors:false)
                    
                 }
      }


 }
 
}

def sonarSummaries() {   

   withSonarQubeEnv('SonarCloud') {
       //sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner-cloud.properties'
       sh '${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectKey=sunilyerubandi_DemoMavenProject -Dsonar.organization=sunilyerubandi -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=8f73ecadbe478e324214c741569315dddfa01ee5 -Dsonar.java.binaries=target/ -Dsonar.branch.name=master'
       //  sh '${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectKey=riyapulusuganti_Demo -Dsonar.organization=riyapulusuganti -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=1ff462f03228674e3a684569d716aad1aff286bb -Dsonar.java.binaries=target/ -Dsonar.branch.name=master'
   
	}
	
  // withSonarQubeEnv('sonarQube_local') {

   //    	sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner.properties'
   		// sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/sonar-scanner.properties'
	//}
	
} // end of def sonarsummaries 
